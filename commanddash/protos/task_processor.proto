syntax = "proto3";

package commanddash;

service TaskProcessor {
  rpc processTask(stream ClientMessage) returns (stream ProcessorMessage) {}
}

// messages from IDEs or other clients talking to CLI
message ClientMessage{
  oneof request_type {
    TaskStartMessage taskStart = 1;
    AdditionalDataMessage additionalData = 2;
  }
}

/// CLI's messages to the clients
message ProcessorMessage{
  oneof response_type {
    SuccessMessage success = 1;
    ErrorMessage error = 2;
    GetAdditionalDataMessage getAdditionalData = 3;
  }
}

message TaskStartMessage{
  string task = 1;
  map<string, string> args = 2;
}

message AdditionalDataMessage{
  map<string, string> args = 1;
}

message SuccessMessage{
  string message = 1;
  map<string, string> args = 2;
}

message ErrorMessage{
  string message = 1;
  map<string, string> args = 2;
}

message GetAdditionalDataMessage{
  string kind = 1;
  map<string, string> args = 2;
}